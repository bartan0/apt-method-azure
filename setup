#!/usr/bin/env python3

from os import chmod, makedirs, path, system
from setuptools import setup
from shutil import copytree, ignore_patterns, rmtree
from sys import argv

from apt_method_azure import __version__

config = {
	'name': 'apt-method-azure',
	'version': __version__,
	'packages': [ 'apt_method_azure' ]
}

files = dict((name, {
	'path': path,
	'content': template.format(
		name = config['name'],
		version = config['version'],
		package = config['packages'][0]
	)
}) for name, path, template in [ (

'control',
'dist/DEBIAN/control',

'''Package: {name}
Version: {version}
Architecture: all
'''
), (

'postinst',
'dist/DEBIAN/postinst',

'''#!/bin/sh

py3compile --package {name}
'''
), (

'azure',
'dist/usr/lib/apt/methods/azure',

'''#!/bin/sh

exec python3 -m{package}
'''

) ])


if __name__ == '__main__':
	args = argv[1:]

	if args and args[0] == 'build' and path.exists('.git'):
		if path.exists('dist'):
			rmtree('dist')

		for file in files.values():
			makedirs(path.dirname(file['path']), exist_ok = True)

			with open(file['path'], 'w') as f:
				f.write(file['content'])

		chmod(files['postinst']['path'], 0o755)
		chmod(files['azure']['path'], 0o755)

		path_packages = 'dist/usr/lib/python3/dist-packages/'

		makedirs(path_packages, exist_ok = True)
		copytree(
			config['packages'][0],
			path_packages + config['packages'][0],
			ignore = ignore_patterns('__pycache__')
		)
		system(__file__ + ' egg_info --egg-base ' + path_packages)

		system('dpkg-deb --build dist .')

	else:
		setup(**config)
